import { ThemeProvider } from '@mui/material';
import { fireEvent, render, screen, waitFor } from '@testing-library/react';
import React from 'react';
import { AppProvider } from '../../contexts/AppContext';
import aobaTheme from '../../theme';
import {
    createMockMealRecord,
    createStatisticsTestData,
    generateMockMealRecords,
    generateMockUsers,
    mockMealRecords,
    mockUsers,
} from '../../utils/testHelpers';
import StatisticsPanel from '../StatisticsPanel';

// „É¢„ÉÉ„ÇØÈñ¢Êï∞
const mockOnBack = jest.fn();

// „ÉÜ„Çπ„Éà„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£
const renderWithProviders = (component: React.ReactElement) => {
    return render(
        <ThemeProvider theme={aobaTheme}>
            <AppProvider>
                {component}
            </AppProvider>
        </ThemeProvider>
    );
};

// LocalStorage„ÅÆ„É¢„ÉÉ„ÇØ
const mockLocalStorage = {
    getItem: jest.fn(),
    setItem: jest.fn(),
};

Object.defineProperty(window, 'localStorage', {
    value: mockLocalStorage,
});

// file-saver„ÅÆ„É¢„ÉÉ„ÇØ
jest.mock('file-saver', () => ({
    saveAs: jest.fn(),
}));

describe('StatisticsPanel', () => {
    beforeEach(() => {
        jest.clearAllMocks();
        mockLocalStorage.getItem.mockReturnValue(JSON.stringify({
            users: mockUsers,
            mealRecords: mockMealRecords,
            currentMenu: null,
            selectedUser: null,
            currentView: 'statistics',
        }));
    });

    describe('Âü∫Êú¨Ë°®Á§∫', () => {
        it('Áµ±Ë®à„Éë„Éç„É´„ÅåÊ≠£„Åó„Åè„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Çã', () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            expect(screen.getByText('üìä Áµ±Ë®à„ÉªÂàÜÊûê')).toBeInTheDocument();
            expect(screen.getByText('Êõ¥Êñ∞')).toBeInTheDocument();
            expect(screen.getByText('CSVÂá∫Âäõ')).toBeInTheDocument();
        });

        it('‰ªäÊó•„ÅÆÁµ±Ë®à„Ç´„Éº„Éâ„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                expect(screen.getByText('üìà ‰ªäÊó•„ÅÆÁä∂Ê≥Å')).toBeInTheDocument();
                expect(screen.getByText('Ê≥®ÊñáÊï∞')).toBeInTheDocument();
                expect(screen.getByText('Ë©ï‰æ°ÂæÖ„Å°')).toBeInTheDocument();
                expect(screen.getByText('Ë©ï‰æ°ÂÆå‰∫Ü')).toBeInTheDocument();
                expect(screen.getByText('Âπ≥ÂùáË©ï‰æ°')).toBeInTheDocument();
            });
        });

        it('ÊúüÈñì„Çµ„Éû„É™„Éº„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                expect(screen.getByText('üìã ÊúüÈñì„Çµ„Éû„É™„Éº')).toBeInTheDocument();
                expect(screen.getByText('Âà©Áî®ËÄÖÊï∞')).toBeInTheDocument();
                expect(screen.getByText('Á∑èÊ≥®ÊñáÊï∞')).toBeInTheDocument();
                expect(screen.getByText('Á∑èÂ£≤‰∏ä')).toBeInTheDocument();
                expect(screen.getByText('Âπ≥ÂùáË©ï‰æ°')).toBeInTheDocument();
            });
        });

        it('„Ç∞„É©„Éï„Çª„ÇØ„Ç∑„Éß„É≥„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                expect(screen.getByText('üìà Êó•Âà•Ê≥®Êñá„ÉªË©ï‰æ°Êé®Áßª')).toBeInTheDocument();
                expect(screen.getByText('‚≠ê Ë©ï‰æ°ÂàÜÂ∏É')).toBeInTheDocument();
                expect(screen.getByText('üçΩÔ∏è „É°„Éã„É•„Éº‰∫∫Ê∞óÂ∫¶')).toBeInTheDocument();
                expect(screen.getByText('üìä ÊúàÂà•„Éà„É¨„É≥„Éâ')).toBeInTheDocument();
            });
        });
    });

    describe('„Éá„Éº„Çø„Éï„Ç£„É´„Çø„É™„É≥„Ç∞', () => {
        it('Êó•‰ªòÁØÑÂõ≤„Éï„Ç£„É´„Çø„Éº„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            expect(screen.getByText('ÊúüÈñì„Éï„Ç£„É´„Çø„Éº')).toBeInTheDocument();
            expect(screen.getByText('‰ªäÊó•')).toBeInTheDocument();
            expect(screen.getByText('‰ªäÈÄ±')).toBeInTheDocument();
            expect(screen.getByText('‰ªäÊúà')).toBeInTheDocument();
        });

        it('ÊúüÈñì„Éó„É™„Çª„ÉÉ„Éà„Éú„Çø„É≥„ÅåÊ©üËÉΩ„Åô„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const todayButton = screen.getByText('‰ªäÊó•');
            fireEvent.click(todayButton);

            // „Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®Âæå„ÅÆÂ§âÂåñ„ÇíÁ¢∫Ë™ç
            await waitFor(() => {
                // ‰ªäÊó•„ÅÆ„Éá„Éº„Çø„ÅÆ„Åø„Å´Áµû„Çâ„Çå„Çã„Åì„Å®„ÇíÊÉ≥ÂÆö
                expect(screen.getByText('üìà ‰ªäÊó•„ÅÆÁä∂Ê≥Å')).toBeInTheDocument();
            });
        });

        it('„Ç´„Çπ„Çø„É†Êó•‰ªòÁØÑÂõ≤„ÇíË®≠ÂÆö„Åß„Åç„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // ÈñãÂßãÊó•„ÅÆË®≠ÂÆö
            const startDateInput = screen.getByLabelText('ÈñãÂßãÊó•');
            fireEvent.change(startDateInput, { target: { value: '2024-01-01' } });

            // ÁµÇ‰∫ÜÊó•„ÅÆË®≠ÂÆö
            const endDateInput = screen.getByLabelText('ÁµÇ‰∫ÜÊó•');
            fireEvent.change(endDateInput, { target: { value: '2024-01-31' } });

            // „Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®
            const applyButton = screen.getByText('ÈÅ©Áî®');
            fireEvent.click(applyButton);

            await waitFor(() => {
                // „Ç´„Çπ„Çø„É†ÊúüÈñì„Åß„ÅÆ„Éá„Éº„ÇøË°®Á§∫„ÇíÁ¢∫Ë™ç
                expect(screen.getByText('üìã ÊúüÈñì„Çµ„Éû„É™„Éº')).toBeInTheDocument();
            });
        });
    });

    describe('„Éá„Éº„ÇøÊõ¥Êñ∞Ê©üËÉΩ', () => {
        it('Êõ¥Êñ∞„Éú„Çø„É≥„ÅåÊ©üËÉΩ„Åô„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const refreshButton = screen.getByText('Êõ¥Êñ∞');
            fireEvent.click(refreshButton);

            // Áµ±Ë®à„Éá„Éº„Çø„ÅåÂÜçË®àÁÆó„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
            await waitFor(() => {
                expect(screen.getByText('üìà ‰ªäÊó•„ÅÆÁä∂Ê≥Å')).toBeInTheDocument();
            });
        });

        it('„Éá„Éº„ÇøÂ§âÊõ¥ÊôÇ„Å´Ëá™ÂãïÊõ¥Êñ∞„Åï„Çå„Çã', async () => {
            const { rerender } = renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // Êñ∞„Åó„ÅÑ„Éá„Éº„Çø„Åß„É¢„ÉÉ„ÇØ„ÇíÊõ¥Êñ∞
            const newMealRecords = [
                ...mockMealRecords,
                createMockMealRecord({ rating: 9, price: 600 }),
            ];

            mockLocalStorage.getItem.mockReturnValue(JSON.stringify({
                users: mockUsers,
                mealRecords: newMealRecords,
                currentMenu: null,
                selectedUser: null,
                currentView: 'statistics',
            }));

            // ÂÜç„É¨„É≥„ÉÄ„É™„É≥„Ç∞
            rerender(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                // Áµ±Ë®à„ÅåÊõ¥Êñ∞„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                expect(screen.getByText('üìã ÊúüÈñì„Çµ„Éû„É™„Éº')).toBeInTheDocument();
            });
        });
    });

    describe('CSVÂá∫ÂäõÊ©üËÉΩ', () => {
        it('CSVÂá∫Âäõ„Éú„Çø„É≥„ÅåÊ©üËÉΩ„Åô„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const exportButton = screen.getByText('CSVÂá∫Âäõ');
            fireEvent.click(exportButton);

            await waitFor(() => {
                // „Éï„Ç°„Ç§„É´‰øùÂ≠ò„ÅåÂëº„Å∞„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                const { saveAs } = require('file-saver');
                expect(saveAs).toHaveBeenCalled();
            });
        });

        it('„Éá„Éº„Çø„Åå„Å™„ÅÑÂ†¥Âêà„ÅÆCSVÂá∫Âäõ„Ç®„É©„ÉºÂá¶ÁêÜ', async () => {
            // Á©∫„ÅÆ„Éá„Éº„Çø„Åß„É¢„ÉÉ„ÇØ
            mockLocalStorage.getItem.mockReturnValue(JSON.stringify({
                users: [],
                mealRecords: [],
                currentMenu: null,
                selectedUser: null,
                currentView: 'statistics',
            }));

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const exportButton = screen.getByText('CSVÂá∫Âäõ');
            fireEvent.click(exportButton);

            // „Ç®„É©„Éº„ÅåÈÅ©Âàá„Å´Âá¶ÁêÜ„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
            await waitFor(() => {
                // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅØË°®Á§∫„Åï„Çå„Å™„ÅÑ„Åå„ÄÅÂá¶ÁêÜ„ÅåÂÆå‰∫Ü„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                expect(exportButton).toBeInTheDocument();
            });
        });
    });

    describe('„Ç∞„É©„ÉïË°®Á§∫', () => {
        it('Êó•Âà•Êé®Áßª„Ç∞„É©„Éï„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                // Recharts„ÅÆ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅåÊèèÁîª„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                const chartContainer = screen.getByText('üìà Êó•Âà•Ê≥®Êñá„ÉªË©ï‰æ°Êé®Áßª').closest('.MuiCard-root');
                expect(chartContainer).toBeInTheDocument();
            });
        });

        it('Ë©ï‰æ°ÂàÜÂ∏É„Ç∞„É©„Éï„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                const chartContainer = screen.getByText('‚≠ê Ë©ï‰æ°ÂàÜÂ∏É').closest('.MuiCard-root');
                expect(chartContainer).toBeInTheDocument();
            });
        });

        it('„É°„Éã„É•„Éº‰∫∫Ê∞óÂ∫¶„Ç∞„É©„Éï„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                const chartContainer = screen.getByText('üçΩÔ∏è „É°„Éã„É•„Éº‰∫∫Ê∞óÂ∫¶').closest('.MuiCard-root');
                expect(chartContainer).toBeInTheDocument();
            });
        });

        it('ÊúàÂà•„Éà„É¨„É≥„Éâ„Ç∞„É©„Éï„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                const chartContainer = screen.getByText('üìä ÊúàÂà•„Éà„É¨„É≥„Éâ').closest('.MuiCard-root');
                expect(chartContainer).toBeInTheDocument();
            });
        });
    });

    describe('„É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú', () => {
        it('„É¢„Éê„Ç§„É´„Éì„É•„Éº„ÅßÈÅ©Âàá„Å´Ë°®Á§∫„Åï„Çå„Çã', () => {
            // „Éì„É•„Éº„Éù„Éº„Éà„Çí„É¢„Éê„Ç§„É´„Çµ„Ç§„Ç∫„Å´Ë®≠ÂÆö
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 375,
            });

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // „É¢„Éê„Ç§„É´Âêë„Åë„ÅÆ„É¨„Ç§„Ç¢„Ç¶„Éà„ÅåÈÅ©Áî®„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
            expect(screen.getByText('üìä Áµ±Ë®à„ÉªÂàÜÊûê')).toBeInTheDocument();
        });

        it('„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Éì„É•„Éº„ÅßÈÅ©Âàá„Å´Ë°®Á§∫„Åï„Çå„Çã', () => {
            // „Éì„É•„Éº„Éù„Éº„Éà„Çí„Éá„Çπ„ÇØ„Éà„ÉÉ„Éó„Çµ„Ç§„Ç∫„Å´Ë®≠ÂÆö
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 1200,
            });

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // „Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóÂêë„Åë„ÅÆ„É¨„Ç§„Ç¢„Ç¶„Éà„ÅåÈÅ©Áî®„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
            expect(screen.getByText('üìä Áµ±Ë®à„ÉªÂàÜÊûê')).toBeInTheDocument();
        });
    });

    describe('„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞', () => {
        it('Áµ±Ë®àË®àÁÆó„Ç®„É©„Éº„ÅåÈÅ©Âàá„Å´Âá¶ÁêÜ„Åï„Çå„Çã', async () => {
            // ‰∏çÊ≠£„Å™„Éá„Éº„Çø„Åß„Ç®„É©„Éº„ÇíÁô∫Áîü„Åï„Åõ„Çã
            mockLocalStorage.getItem.mockReturnValue('invalid json');

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                // „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Å¶„ÇÇ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åå„ÇØ„É©„ÉÉ„Ç∑„É•„Åó„Å™„ÅÑ„Åì„Å®„ÇíÁ¢∫Ë™ç
                expect(screen.getByText('Áµ±Ë®à„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...')).toBeInTheDocument();
            });
        });

        it('CSVÂá∫Âäõ„Ç®„É©„Éº„ÅåÈÅ©Âàá„Å´Âá¶ÁêÜ„Åï„Çå„Çã', async () => {
            // file-saver„Åß„Ç®„É©„Éº„ÇíÁô∫Áîü„Åï„Åõ„Çã
            const { saveAs } = require('file-saver');
            saveAs.mockImplementation(() => {
                throw new Error('CSV export failed');
            });

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const exportButton = screen.getByText('CSVÂá∫Âäõ');
            fireEvent.click(exportButton);

            // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
            await waitFor(() => {
                // window.alert„ÅÆ„É¢„ÉÉ„ÇØ„ÇíÁ¢∫Ë™ç„Åô„Çã„Åã„ÄÅ„Ç®„É©„ÉºË°®Á§∫Ë¶ÅÁ¥†„ÇíÁ¢∫Ë™ç
                expect(exportButton).toBeInTheDocument();
            });
        });
    });

    describe('„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÉÜ„Çπ„Éà', () => {
        it('Â§ßÈáè„Éá„Éº„Çø„Åß„ÇÇÈÅ©Âàá„Å´Ë°®Á§∫„Åï„Çå„Çã', async () => {
            const { users, mealRecords } = createStatisticsTestData();
            const largeDataset = {
                users: generateMockUsers(100),
                mealRecords: generateMockMealRecords(generateMockUsers(100), 90),
                currentMenu: null,
                selectedUser: null,
                currentView: 'statistics',
            };

            mockLocalStorage.getItem.mockReturnValue(JSON.stringify(largeDataset));

            const startTime = performance.now();
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                expect(screen.getByText('üìä Áµ±Ë®à„ÉªÂàÜÊûê')).toBeInTheDocument();
            });

            const endTime = performance.now();
            const renderTime = endTime - startTime;

            // 3Áßí‰ª•ÂÜÖ„Åß„É¨„É≥„ÉÄ„É™„É≥„Ç∞ÂÆå‰∫Ü„Åô„Çã„Åì„Å®„ÇíÊúüÂæÖ
            expect(renderTime).toBeLessThan(3000);
        });
    });

    describe('Áµ±Ë®à„Éá„Éº„Çø„ÅÆÊ≠£Á¢∫ÊÄß', () => {
        it('Ê≠£„Åó„ÅÑÁµ±Ë®àÂÄ§„ÅåË°®Á§∫„Åï„Çå„Çã', async () => {
            const testData = createStatisticsTestData();
            mockLocalStorage.getItem.mockReturnValue(JSON.stringify({
                users: testData.users,
                mealRecords: testData.mealRecords,
                currentMenu: null,
                selectedUser: null,
                currentView: 'statistics',
            }));

            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            await waitFor(() => {
                // ÊúüÂæÖ„Åï„Çå„ÇãÁµ±Ë®àÂÄ§„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                const summarySection = screen.getByText('üìã ÊúüÈñì„Çµ„Éû„É™„Éº').closest('.MuiCard-root');
                expect(summarySection).toBeInTheDocument();

                // Âà©Áî®ËÄÖÊï∞„ÅÆË°®Á§∫Á¢∫Ë™ç
                expect(screen.getByText(testData.expectedStats.totalUsers.toString())).toBeInTheDocument();
            });
        });

        it('„Éï„Ç£„É´„Çø„ÉºÈÅ©Áî®Âæå„ÅÆÁµ±Ë®à„ÅåÊ≠£Á¢∫„Åß„ÅÇ„Çã', async () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // ‰ªäÊó•„ÅÆ„Éï„Ç£„É´„Çø„Éº„ÇíÈÅ©Áî®
            const todayButton = screen.getByText('‰ªäÊó•');
            fireEvent.click(todayButton);

            await waitFor(() => {
                // ‰ªäÊó•„ÅÆ„Éá„Éº„Çø„ÅÆ„Åø„ÅÆÁµ±Ë®à„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
                const todaySection = screen.getByText('üìà ‰ªäÊó•„ÅÆÁä∂Ê≥Å').closest('.MuiCard-root');
                expect(todaySection).toBeInTheDocument();
            });
        });
    });

    describe('„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£', () => {
        it('ÈÅ©Âàá„Å™ARIA„É©„Éô„É´„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Çã', () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            // „Éú„Çø„É≥„ÅÆ„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£
            const refreshButton = screen.getByText('Êõ¥Êñ∞');
            expect(refreshButton).toHaveAttribute('type', 'button');

            const exportButton = screen.getByText('CSVÂá∫Âäõ');
            expect(exportButton).toHaveAttribute('type', 'button');
        });

        it('„Ç≠„Éº„Éú„Éº„Éâ„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„ÅåÊ©üËÉΩ„Åô„Çã', () => {
            renderWithProviders(<StatisticsPanel onBack={mockOnBack} />);

            const refreshButton = screen.getByText('Êõ¥Êñ∞');
            refreshButton.focus();
            expect(document.activeElement).toBe(refreshButton);

            // Tab„Ç≠„Éº„Åß„ÅÆÁßªÂãï
            fireEvent.keyDown(refreshButton, { key: 'Tab' });
            // Ê¨°„ÅÆË¶ÅÁ¥†„Å´„Éï„Ç©„Éº„Ç´„Çπ„ÅåÁßª„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
        });
    });
}); 